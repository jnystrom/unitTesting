// Generated by CoffeeScript 1.8.0
(function() {
  var InstanceResolver, Resolver, assert, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  assert = require('assert');

  _ = require('underscore');

  Resolver = require('./Resolver');

  InstanceResolver = (function(_super) {
    __extends(InstanceResolver, _super);

    function InstanceResolver(forge, binding, instance) {
      this.instance = instance;
      InstanceResolver.__super__.constructor.call(this, forge, binding);
      assert(this.instance != null, 'The argument "instance" must have a value');
      this.dependencies = [];
    }

    InstanceResolver.prototype.resolve = function(context, args) {
      return this.instance;
    };

    InstanceResolver.prototype.toString = function() {
      var _ref;
      if (this.instance == null) {
        return '<unknown instance>';
      } else if (((_ref = this.instance.constructor) != null ? _ref.name : void 0) != null) {
        return "an instance of " + this.instance.constructor.name;
      } else {
        return "an instance of " + (typeof this.instance);
      }
    };

    return InstanceResolver;

  })(Resolver);

  module.exports = InstanceResolver;

}).call(this);
