// Generated by CoffeeScript 1.8.0
(function() {
  var FunctionResolver, Resolver, assert, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  assert = require('assert');

  _ = require('underscore');

  Resolver = require('./Resolver');

  FunctionResolver = (function(_super) {
    __extends(FunctionResolver, _super);

    function FunctionResolver(forge, binding, func) {
      this.func = func;
      FunctionResolver.__super__.constructor.call(this, forge, binding);
      assert(this.func != null, 'The argument "func" must have a value');
      this.dependencies = this.forge.inspector.getDependencies(this.func);
    }

    FunctionResolver.prototype.resolve = function(context, args) {
      args = this.resolveDependencies(context, this.dependencies, args);
      return this.func.apply(null, args);
    };

    FunctionResolver.prototype.toString = function() {
      return 'function';
    };

    return FunctionResolver;

  })(Resolver);

  module.exports = FunctionResolver;

}).call(this);
